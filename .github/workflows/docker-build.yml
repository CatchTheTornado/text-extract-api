name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Which images to build"
        required: false
        default: "both"
        type: choice
        options:
          - cpu
          - gpu
          - both
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      # When dispatched manually, inputs.target selects which images to build; otherwise build both
      TARGET: ${{ github.event_name == 'workflow_dispatch' && inputs.target || 'both' }}

    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image-suffix: ""
            platforms: linux/amd64,linux/arm64
            target: cpu
          - dockerfile: Dockerfile.gpu
            image-suffix: "-gpu"
            platforms: linux/amd64
            target: gpu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: (github.event_name != 'pull_request') && (env.TARGET == 'both' || env.TARGET == matrix.target)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: env.TARGET == 'both' || env.TARGET == matrix.target
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.image-suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: env.TARGET == 'both' || env.TARGET == matrix.target
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          load: true
          tags: test-image:latest
          cache-from: type=gha

      - name: Test Docker image
        run: |
          # Basic smoke test - check if the image can start
          docker run --rm -d --name test-container test-image:latest sleep 30
          
          # Wait a moment for container to start
          sleep 5
          
          # Check if container is running
          docker ps | grep test-container
          
          # Clean up
          docker stop test-container || true